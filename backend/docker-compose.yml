services:
    web:
        build: ./app
        platform: linux/amd64
        container_name: fastapi_app
        restart: always
        env_file:
            - .env
        volumes:
            - ./app:/app
            - ./.env:/app/.env
            - ./uploads:/app/uploads
            - ./app/alembic/versions:/app/alembic/versions
        ports:
            - "8000:8000"
        expose:
            - "8000"
        depends_on:
            - redis
            - rabbitmq
        networks:
            - memento_net

    redis:
        image: redis:7.2-alpine
        container_name: redis_cache
        restart: always
        ports:
            - "6379:6379"
        command: redis-server --appendonly yes
        volumes:
            - redis_data:/data
        networks:
            - memento_net

    rabbitmq:
        image: rabbitmq:3.13-management-alpine
        container_name: rabbitmq_broker
        restart: always
        ports:
            - "5672:5672"   # AMQP port
            - "15672:15672" # Management UI
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS:-password}
        volumes:
            - rabbitmq_data:/var/lib/rabbitmq
        networks:
            - memento_net
        healthcheck:
            test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
            interval: 30s
            timeout: 10s
            retries: 5

    celery:
        build: ./app
        platform: linux/amd64
        container_name: celery_worker
        restart: always
        env_file:
            - .env
        volumes:
            - ./app:/app
            - ./.env:/app/.env
        command: celery -A tasks worker --loglevel=info --uid=nobody --gid=nogroup
        depends_on:
            redis:
                condition: service_started
            rabbitmq:
                condition: service_healthy
        networks:
            - memento_net
        environment:
            - C_FORCE_ROOT=1

    nginx:
        image: nginx:latest
        container_name: nginx_proxy
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
            - /etc/ssl/certs/selfsigned.crt:/etc/ssl/certs/selfsigned.crt
            - /etc/ssl/private/selfsigned.key:/etc/ssl/private/selfsigned.key
        depends_on:
            - web
        networks:
            - memento_net

    # db:
    #   image: postgres:15
    #   container_name: postgres_db
    #   restart: always
    #   ports:
    #           - "5432:5432"
    #   environment:
    #     POSTGRES_USER: ${POSTGRES_USER}
    #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #     POSTGRES_DB: ${POSTGRES_DB}
    #   healthcheck:
    #     test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
    #     interval: 5s
    #     timeout: 5s
    #     retries: 5
    #   volumes:
    #     - fastapi-app_pgdata:/var/lib/postgresql/data
    #   networks:
    #     - memento_net

    # dialogue:
    #   build:
    #     context: ./dialogue
    #   container_name: dialogue
    #   expose:
    #     - "6060"
    #   env_file:
    #     - ./dialogue/.env
    #   networks:
    #     - memento_net
    #   depends_on:
    #     db:
    #       condition: service_healthy

    # fish-speech:
    #   build:
    #     context: ./fish-speech
    #     dockerfile: Dockerfile
    #   container_name: fish-speech
    #   expose:
    #     - "5000"
    #   volumes:
    #     - ./fish-speech/checkpoints:/app/checkpoints
    #     - ./shared/input_wav:/app/input_wav
    #     - ./shared/output_wav:/app/output_wav
    #     - ./shared/model_output:/app/model_output
    #   runtime: nvidia
    #   environment:
    #     - NVIDIA_VISIBLE_DEVICES=all
    #   networks:
    #     - memento_net
    #   depends_on:
    #     db:
    #       condition: service_healthy

volumes:
    fastapi-app_pgdata:
    redis_data:
    rabbitmq_data:

networks:
    memento_net:
